name: Upstream Sync

on:
  schedule:
    # Run every Sunday at 00:00 UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      sync_type:
        description: 'Type of sync to perform'
        required: true
        default: 'check'
        type: choice
        options:
          - check
          - sync
          - force-sync

jobs:
  check-divergence:
    name: Check Upstream Divergence
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
      commit_count: ${{ steps.check.outputs.commit_count }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "sport-cli Bot"
          git config user.email "bot@sportsculture.ai"

      - name: Add Upstream Remote
        run: |
          git remote add upstream https://github.com/google-gemini/gemini-cli.git || true
          git fetch upstream

      - name: Check for Upstream Changes
        id: check
        run: |
          # Count new commits from upstream
          COMMIT_COUNT=$(git rev-list --count HEAD..upstream/main)
          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT

          if [ "$COMMIT_COUNT" -gt 0 ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Found $COMMIT_COUNT new commits from upstream"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No new commits from upstream"
          fi

      - name: Generate Divergence Report
        if: steps.check.outputs.has_changes == 'true'
        run: |
          mkdir -p reports
          ./scripts/check-divergence.sh > reports/divergence-report.txt || true

          # Create summary for PR description
          cat > reports/sync-summary.md << 'EOF'
          ## Upstream Sync Summary

          **New commits from upstream:** ${{ steps.check.outputs.commit_count }}

          ### Recent Upstream Changes
          EOF

          git log HEAD..upstream/main --oneline --max-count=10 >> reports/sync-summary.md || true

      - name: Upload Divergence Report
        if: steps.check.outputs.has_changes == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: divergence-report
          path: reports/

  sync-upstream:
    name: Sync with Upstream
    needs: check-divergence
    if: |
      needs.check-divergence.outputs.has_changes == 'true' && 
      (github.event_name == 'schedule' || github.event.inputs.sync_type != 'check')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "sport-cli Bot"
          git config user.email "bot@sportsculture.ai"

      - name: Add Upstream Remote
        run: |
          git remote add upstream https://github.com/google-gemini/gemini-cli.git
          git fetch upstream

      - name: Update sport-upstream Branch
        run: |
          git checkout -B sport-upstream upstream/main
          git push origin sport-upstream --force-with-lease || true

      - name: Create Sync Branch
        id: create_branch
        run: |
          SYNC_DATE=$(date +%Y%m%d)
          SYNC_BRANCH="sync/upstream-$SYNC_DATE"
          echo "sync_branch=$SYNC_BRANCH" >> $GITHUB_OUTPUT

          git checkout main
          git checkout -b "$SYNC_BRANCH"

      - name: Attempt Automatic Merge
        id: merge
        continue-on-error: true
        run: |
          if git merge sport-upstream --no-edit; then
            echo "merge_success=true" >> $GITHUB_OUTPUT
            echo "Merge completed successfully"
          else
            echo "merge_success=false" >> $GITHUB_OUTPUT
            echo "Merge has conflicts"
            
            # Save conflict information
            git diff --name-only --diff-filter=U > conflicts.txt
            echo "Conflicted files:"
            cat conflicts.txt
          fi

      - name: Apply Patches (if merge successful)
        if: steps.merge.outputs.merge_success == 'true'
        continue-on-error: true
        run: |
          echo "Applying sport-cli patches..."
          for patch in patches/*/*.patch; do
            if [ -f "$patch" ]; then
              echo "Applying $patch..."
              git apply "$patch" || echo "Warning: Failed to apply $patch"
            fi
          done

      - name: Setup Node.js
        if: steps.merge.outputs.merge_success == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run Tests
        if: steps.merge.outputs.merge_success == 'true'
        id: tests
        continue-on-error: true
        run: |
          npm ci
          npm run build
          npm run test
          echo "tests_passed=$?" >> $GITHUB_OUTPUT

      - name: Push Sync Branch
        if: github.event.inputs.sync_type != 'check'
        run: |
          git push origin ${{ steps.create_branch.outputs.sync_branch }}

      - name: Create Pull Request
        if: github.event.inputs.sync_type != 'check'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.create_branch.outputs.sync_branch }}
          title: 'üîÑ Sync with upstream google-gemini/gemini-cli'
          body: |
            ## Automated Upstream Sync

            This PR syncs sport-cli with the latest changes from [google-gemini/gemini-cli](https://github.com/google-gemini/gemini-cli).

            **Commits from upstream:** ${{ needs.check-divergence.outputs.commit_count }}
            **Merge status:** ${{ steps.merge.outputs.merge_success == 'true' && '‚úÖ Successful' || '‚ö†Ô∏è Has conflicts' }}
            **Tests status:** ${{ steps.tests.outputs.tests_passed == '0' && '‚úÖ Passing' || '‚ö†Ô∏è Failing' }}

            ${{ steps.merge.outputs.merge_success == 'false' && '### ‚ö†Ô∏è Manual Conflict Resolution Required\n\nPlease check out this branch locally and resolve the conflicts.' || '' }}

            ### Next Steps
            1. Review the changes carefully
            2. Ensure all sport-cli features still work
            3. Run manual tests if needed
            4. Merge when ready

            ---
            *This PR was automatically created by the upstream sync workflow.*
          labels: |
            upstream-sync
            automated
          draft: ${{ steps.merge.outputs.merge_success == 'false' }}

  notify:
    name: Send Notifications
    needs: [check-divergence, sync-upstream]
    if: always() && needs.check-divergence.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Notify on Slack
        if: env.SLACK_WEBHOOK_URL != ''
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ "${{ needs.sync-upstream.result }}" == "success" ]; then
            STATUS="‚úÖ Success"
            COLOR="good"
          elif [ "${{ needs.sync-upstream.result }}" == "skipped" ]; then
            STATUS="‚ÑπÔ∏è Check Only"
            COLOR="warning"
          else
            STATUS="‚ùå Failed"
            COLOR="danger"
          fi

          curl -X POST $SLACK_WEBHOOK_URL \
            -H 'Content-Type: application/json' \
            -d "{
              \"attachments\": [{
                \"color\": \"$COLOR\",
                \"title\": \"Upstream Sync: $STATUS\",
                \"text\": \"New commits from upstream: ${{ needs.check-divergence.outputs.commit_count }}\"
              }]
            }"

      - name: Create Issue on Failure
        if: needs.sync-upstream.result == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Upstream sync failed',
              body: `The automated upstream sync workflow failed to complete.
              
              **Commits from upstream:** ${{ needs.check-divergence.outputs.commit_count }}
              
              Please run the sync manually:
              \`\`\`bash
              git fetch upstream
              git checkout main
              git checkout -b sync/upstream-manual
              git merge upstream/main
              \`\`\`
              
              [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`,
              labels: ['upstream-sync', 'bug']
            });
            console.log(`Created issue #${issue.data.number}`);
