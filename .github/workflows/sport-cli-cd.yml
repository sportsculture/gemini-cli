name: Sport-CLI CD

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'canary'
        type: choice
        options:
          - canary
          - alpha
          - beta
          - release

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Generate version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            RELEASE_TYPE="${{ github.event.inputs.release_type }}"
          else
            RELEASE_TYPE="canary"
          fi
          
          BASE_VERSION=$(node -p "require('./package.json').version")
          SHORT_SHA=$(git rev-parse --short HEAD)
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          
          case $RELEASE_TYPE in
            canary)
              VERSION="${BASE_VERSION}-canary.${TIMESTAMP}.${SHORT_SHA}"
              ;;
            alpha|beta)
              VERSION="${BASE_VERSION}-${RELEASE_TYPE}.${TIMESTAMP}"
              ;;
            release)
              VERSION="${BASE_VERSION}"
              ;;
          esac
          
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "release_type=${RELEASE_TYPE}" >> $GITHUB_OUTPUT
          echo "ðŸ“¦ Version: ${VERSION}"
      
      - name: Update package versions
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Update root package.json
          npm version $VERSION --no-git-tag-version
          
          # Update workspace packages
          for pkg in packages/*/package.json; do
            node -e "
              const fs = require('fs');
              const pkg = JSON.parse(fs.readFileSync('$pkg'));
              pkg.version = '$VERSION';
              fs.writeFileSync('$pkg', JSON.stringify(pkg, null, 2) + '\n');
            "
          done
      
      - name: Pack packages
        run: |
          npm pack
          
          for pkg in packages/*; do
            if [ -f "$pkg/package.json" ]; then
              (cd $pkg && npm pack)
            fi
          done
      
      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Publish with appropriate tag
          TAG="${{ steps.version.outputs.release_type }}"
          
          if [ "$TAG" == "release" ]; then
            npm publish --tag latest
          else
            npm publish --tag $TAG
          fi
          
          # Publish workspace packages
          for pkg in packages/*; do
            if [ -f "$pkg/package.json" ]; then
              (cd $pkg && npm publish --tag $TAG)
            fi
          done
      
      - name: Create GitHub Release
        if: github.event.inputs.release_type == 'release'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## sport-cli v${{ steps.version.outputs.version }}
            
            ### Installation
            ```bash
            npm install -g @sportsculture/sport-cli@${{ steps.version.outputs.version }}
            ```
            
            ### What's Changed
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          draft: false
          prerelease: false

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-publish
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ needs.build-and-publish.outputs.version }}

  integration-test:
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
      
      - name: Test canary installation
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Install the just-published canary version
          npm install -g @sportsculture/sport-cli@canary
          
          # Basic smoke tests
          sport --version
          sport --help
          
          # Test plugin system
          sport plugin list
          
          echo "âœ… Canary installation test passed!"
      
      - name: Docker smoke test
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest sport --version