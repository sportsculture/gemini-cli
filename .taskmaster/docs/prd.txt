# Models Command UI Fixes - Product Requirements Document

## Problem Statement
The `/models` command in sport-cli has multiple critical UI and functionality issues that prevent users from effectively discovering and selecting AI models:

1. **Bold formatting failure**: Model names show visible `**` asterisks instead of bold text
2. **Column truncation**: "Context" appears as "Con..." due to width constraints  
3. **Duplicate recommendations**: Multiple Dolphin models appear instead of diverse selection
4. **Poor user experience**: Cost explanation text is cut off, table formatting is misaligned

## User Story
As a software developer switching from Claude Code to sport-cli, I need a clean, informative models list that helps me:
- Quickly identify the best Dolphin model (my preferred choice)
- See flagship models from major providers (OpenAI, Anthropic, Google, XAI)
- Understand model capabilities (context length, cost)
- Make informed decisions about which model to use

## Requirements

### Core Functionality
1. **Curated Recommendations**: Show exactly 1 best Dolphin model + 1 best model from each major provider
2. **Proper Formatting**: Bold model names should render correctly in terminal
3. **Complete Information**: All column headers and content should be fully visible
4. **Clear Pricing**: Cost information should be clearly explained and consistently formatted

### Technical Requirements
1. Fix MessageType.GEMINI rendering issues for table content
2. Implement proper deduplication logic for model recommendations  
3. Adjust column widths to fit terminal constraints
4. Add explanation text for cost methodology

### User Experience
1. **Clean Table**: Properly aligned borders, readable headers
2. **Diverse Selection**: No duplicate models in recommendations
3. **Clear Value Proposition**: Each model should have clear "Best For" description
4. **Actionable**: Include usage examples and links to full model lists

## Success Criteria
- Bold formatting works correctly for all model names
- "Context" and "Cost" headers display completely
- Exactly 1 Dolphin model + diverse selection from other providers
- Table renders properly within standard terminal widths (80+ chars)
- Cost explanation text displays completely

## Technical Context
- CLI tool built with TypeScript/Node.js
- Uses MessageType system for output rendering
- Table content processed through message formatting system
- OpenRouter API integration for model data
- Dynamic scoring system for model recommendations